from time import sleep
import re
import json
from ast import literal_eval
import requests
from datetime import date
from MySQL import SQL
from Handlers.Parsers.ozon import ozon_send_message
from loader import bot, dp
from aiogram import types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.callback_data import CallbackData
from reply_texts import WBCON_LINK, WBCON_STORAGES_LINK

parsing_cb_wildberries = CallbackData('parsing_wb', 'action')


async def wb_send_message(message: types.Message):
    user_id = message.from_user.id
    print(user_id)
    parsing_left_count = SQL().get_parsing_left_count(user_id)
    if parsing_left_count > 0:
        message_text = message.text
        await message.answer(f"–ñ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —Å–∫–æ—Ä–æ –æ–Ω –ø—Ä–∏–¥—ë—Ç –≤ —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ–º(WB –≤ –ø–æ—Ä—è–¥–∫–µ –æ—á–µ—Ä–µ–¥–∏).\n–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {parsing_left_count - 1} –∏–∑ 200 –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å",)

        SQL().update_parsing_left_count(user_id, parsing_left_count, amount=1)
        if message_text.isdigit():
            pass
        else:
            message_text = re.search(
                "https://(www\.|)wildberries\.ru/catalog/(\d*)", str(message_text)).group(2)
        ud = SQL().POST_WILDBERRIES_REQUEST(message_text, user_id)
        try:
            ud = json.loads(ud)
            podolsk, podolsk_total = ud["wh_117501"], ud["wh_117501_sum"]
            coledino, coledino_total = ud["wh_507"], ud["wh_507_sum"]
            novosib, novosib_total = ud["wh_686"], ud["wh_686_sum"]
            habarovsk, habarovsk_total = ud["wh_1193"], ud["wh_1193_sum"]
            krasnodar_old, krasnodar_old_total = ud["wh_1699"], ud["wh_1699_sum"]
            krasnodar, krasnodar_total = ud["wh_130744"], ud["wh_130744_sum"]
            ekaterinburg, ekaterinburg_total = ud["wh_1733"], ud["wh_1733_sum"]
            piter, piter_total = ud["wh_2737"], ud["wh_2737_sum"]
            kazan, kazan_total = ud["wh_117986"], ud["wh_117986_sum"]
            domodedovo, domodedovo_total = ud["wh_116433"], ud["wh_116433_sum"]
            fbs, fbs_total = ud["wh_fbs"], ud["wh_fbs_sum"]
            elektrostal, elektrostal_total = ud["wh_120762"], ud["wh_120762_sum"]
            elektrostal_kbt, elektrostal_kbt_total = ud["wh_120602"], ud["wh_120602_sum"]
            elektrostal_kbt_2, elektrostal_kbt_2_total = ud["wh_121709"], ud["wh_121709_sum"]
            ostatok = ud["all_qty"]
            storage_text_to_send = "<i>–û–°–¢–ê–¢–ö–ò –ü–û –°–ö–õ–ê–î–ê–ú</i>:\n"
            if podolsk is not None:
                storage_text_to_send += f"–ü–æ–¥–æ–ª—å—Å–∫: <b>{podolsk}</b>" + "\n"
            if podolsk_total is not None:
                storage_text_to_send += f"–ü–æ–¥–æ–ª—å—Å–∫ –≤—Å–µ–≥–æ: <b>{podolsk}</b>" + "\n"
            if coledino is not None:
                storage_text_to_send += f"–ö–æ–ª–µ–¥–∏–Ω–æ: <b>{coledino}</b>" + "\n"
            if coledino_total is not None:
                storage_text_to_send += f"–ö–æ–ª–µ–¥–∏–Ω–æ –≤—Å–µ–≥–æ: <b>{coledino_total}</b>" + "\n"
            if novosib is not None:
                storage_text_to_send += f"–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫: <b>{novosib}</b>" + "\n"
            if novosib_total is not None:
                storage_text_to_send += f"–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ –≤—Å–µ–≥–æ: <b>{novosib_total}</b>" + "\n"
            if krasnodar_old is not None:
                storage_text_to_send += f"–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä-—Å—Ç–∞—Ä—ã–π: <b>{krasnodar_old}</b>" + "\n"
            if krasnodar_old_total is not None:
                storage_text_to_send += f"–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä-—Å—Ç–∞—Ä—ã–π –≤—Å–µ–≥–æ: <b>{krasnodar_old_total}</b>" + "\n"
            if habarovsk is not None:
                storage_text_to_send += f"–•–∞–±–∞—Ä–æ–≤—Å–∫: <b>{habarovsk}</b>" + "\n"
            if habarovsk_total is not None:
                storage_text_to_send += f"–•–∞–±–∞—Ä–æ–≤—Å–∫ –≤—Å–µ–≥–æ: <b>{habarovsk_total}</b>" + "\n"
            if krasnodar is not None:
                storage_text_to_send += f"–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä: <b>{krasnodar}</b>" + "\n"
            if krasnodar_total is not None:
                storage_text_to_send += f"–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä –≤—Å–µ–≥–æ: <b>{krasnodar_total}</b>" + "\n"
            if ekaterinburg is not None:
                storage_text_to_send += f"–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥: <b>{ekaterinburg}</b>" + "\n"
            if ekaterinburg_total is not None:
                storage_text_to_send += f"–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ –≤—Å–µ–≥–æ: <b>{ekaterinburg_total}</b>" + "\n"
            if piter is not None:
                storage_text_to_send += f"–ü–∏—Ç–µ—Ä: <b>{piter}</b>" + "\n"
            if piter_total is not None:
                storage_text_to_send += f"–ü–∏—Ç–µ—Ä –≤—Å–µ–≥–æ: <b>{piter_total}</b>" + "\n"
            if kazan is not None:
                storage_text_to_send += f"–ö–∞–∑–∞–Ω—å: <b>{kazan}</b>" + "\n"
            if kazan_total is not None:
                storage_text_to_send += f"–ö–∞–∑–∞–Ω—å –≤—Å–µ–≥–æ: <b>{kazan_total}</b>" + "\n"
            if domodedovo is not None:
                storage_text_to_send += f"–î–æ–º–æ–¥–µ–¥–æ–≤–æ: <b>{domodedovo}</b>" + "\n"
            if domodedovo_total is not None:
                storage_text_to_send += f"–î–æ–º–æ–¥–µ–¥–æ–≤–æ –≤—Å–µ–≥–æ: <b>{domodedovo_total}</b>" + "\n"
            if fbs is not None:
                storage_text_to_send += f"FBS: <b>{fbs}</b>" + "\n"
            if fbs_total is not None:
                storage_text_to_send += f"FBS –≤—Å–µ–≥–æ: <b>{fbs_total}</b>" + "\n"
            if elektrostal is not None:
                storage_text_to_send += f"–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–ª—å: <b>{elektrostal}</b>" + "\n"
            if elektrostal_total is not None:
                storage_text_to_send += f"–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–ª—å –≤—Å–µ–≥–æ:<b>{elektrostal_total}</b>" + "\n"
            if elektrostal_kbt is not None:
                storage_text_to_send += f"–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–ª—å-–ö–ë–¢: <b>{elektrostal_kbt}</b>" + "\n"
            if elektrostal_kbt_total is not None:
                storage_text_to_send += f"–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–ª—å-–ö–ë–¢ –≤—Å–µ–≥–æ: <b>{elektrostal_kbt_total}</b>" + "\n"
            if elektrostal_kbt_2 is not None:
                storage_text_to_send += f"–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–ª—å-–ö–ë–¢-2: <b>{elektrostal_kbt_2}</b>" + "\n"
            if elektrostal_kbt_2_total is not None:
                storage_text_to_send += f"–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–ª—å-–ö–ë–¢-2 –≤—Å–µ–≥–æ: <b>{elektrostal_kbt_2_total}</b>" + "\n"
            storage_text_to_send += f"–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: <b>{ostatok}</b>"
            try:
                discount = round(
                    (1 - (int(ud["item_price_with_sale"]) / int(ud["basic_price"]))) * 100, 1)
            except:
                discount = 0
            try:
                y, m, d = map(int, str(ud["first_feedback_date"]).split("-"))
                first_feedback = date(y, m, d)
                days_passed = int((date.today() - first_feedback).days)
                vel_of_buying_xxx = round(int(ud['orders_count']) / days_passed, 2)
                
                vel_of_buying_yyy = int(ud["item_price_with_sale"]) * vel_of_buying_xxx
                print(vel_of_buying_xxx, type(vel_of_buying_xxx), vel_of_buying_yyy, type(vel_of_buying_yyy))
            except:
                pass
            print(ud)
            text_to_send = f"""
–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –∑–∞–ø—Ä–æ—Å—É: <b>{message_text}</b>
–ù–∞–∑–≤–∞–Ω–∏–µ: <b>{ud["item_name"]}</b>
–ê—Ä—Ç–∏–∫—É–ª: <b>{ud["item_id"]}</b>
–ë—Ä–µ–Ω–¥: <b>{ud["brand_name"]}</b>
–†–µ–π—Ç–∏–Ω–≥: <b>{ud["rating_avg"]}</b>
–ö–æ–ª-–≤–æ –æ—Ç–∑—ã–≤–æ–≤: <b>{str(ud["feedbacks"]).replace("-", "")}</b>
–î–∞—Ç–∞ –ø–µ—Ä–≤–æ–≥–æ –æ—Ç–∑—ã–≤–∞: <b>{ud["first_feedback_date"]}</b>
–¶–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏: <b>{ud["basic_price"]}</b>
–¶–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π: <b>{ud["item_price_with_sale"]}</b>
–°–∫–∏–¥–∫–∞ –≤ %: <b>{ud["basic_sale"]}</b>
–°–∫–∏–¥–∫–∞ –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É –≤ %: <b>{ud["promo_sale"]}</b>
–ò–º—è –ø—Ä–æ–¥–∞–≤—Ü–∞: <b>{ud["supplier_name"]}</b>
–û–ì–†–ù: <b>{ud["ogrn"]}</b>
–ò–ù–ù: <b>{ud["inn"]}</b>
–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å: <b>{ud["legal_address"]}</b>
–°—Ç—Ä–∞–Ω–∞ –∏–∑–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å: <b>{ud["country_"]}</b>
–¶–≤–µ—Ç: <b>{ud["colorname"]}</b>
–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è: <b>{ud["complectation"]}</b>
–û–ø–∏—Å–∞–Ω–∏–µ: <b>{ud["description"]}</b>
–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞: <b>{ud["supplier_url"]}</b>
–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: <b>{ud["item_url"][:-1]}</b>
            """
            storage_text_to_send += f"\n–ö–æ–ª-–≤–æ –≤—ã–∫—É–ø–æ–≤: <b>{ud['orders_count']}</b>"
            try:
                storage_text_to_send += f"\n–°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤—ã–∫—É–ø–∞(–∑–∞ –≤–µ—Å—å –ø–µ—Ä–∏–æ–¥): <b>{str(round(vel_of_buying_xxx, 3))}</b> –µ–¥./–¥–Ω. –∏ <b>{str(round(vel_of_buying_yyy, 3))}</b> —Ä—É–±./–¥–Ω."
            except:
                pass
            try:
                storage_text_to_send += f"\n–í—ã—Ä—É—á–∫–∞ –∑–∞ –≤–µ—Å—å –ø–µ—Ä–∏–æ–¥: <b>{round(int(ud['orders_count']) * int(ud['item_price_with_sale']), 3)}</b> —Ä—É–±."
            except:
                pass
            await message.answer(text_to_send, parse_mode="HTML")
            await message.answer(storage_text_to_send, parse_mode="HTML")
        except Exception as e:
            await message.answer(f"–ü—Ä–æ—Å–∏–º –ø—Ä–æ—â–µ–Ω–∏—è, –Ω–æ –ø–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∏—á–µ–≥–æ –Ω–∞–π—Ç–∏üòî –ù–æ –º—ã –≤–µ—Ä–Ω—É–ª–∏ —Ç–µ–±–µ –ø–æ–ø—ã—Ç–∫—É!")
            print(e)
            parsing_count = SQL().get_parsing_left_count(user_id)
            SQL().update_parsing_left_count(user_id, parsing_count, -1)
    else:
        await message.answer(f"–ò–∑–≤–∏–Ω–∏, –Ω–æ —É —Ç–µ–±—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏üòî –°–æ–≤–µ—Ç—É–µ–º –ø–æ—Å–µ—Ç–∏—Ç—å –Ω–∞—à —Å–∞–π—Ç <b>{WBCON_LINK}</b>, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –±–µ–∑–ª–∏–º–∏—Ç–Ω—É—é –≤–µ—Ä—Å–∏—é –ø–∞—Ä—Å–µ—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –ø–∞—Ä—Å–∏—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ –∞—Ä—Ç–∏–∫—É–ª—ã, –Ω–æ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã, –±—Ä–µ–Ω–¥—ã –∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤!\nhttps://wbcon.ru/",
                                    parse_mode="HTML")