from loader import dp
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.callback_data import CallbackData
from MySQL import SQL
from loader import bot
from Handlers.Parsers.ozon import parsing_cb_ozon
from Handlers.Parsers.wb import parsing_cb_wildberries
from Handlers.catch_services import services_cb
from aiogram import types
from reply_texts import WBCON_INSTRUCTION_LINK

parsing_cb = CallbackData("parsers", "action")

@dp.message_handler(lambda message: message.text == "–ü–∞—Ä—Å–µ—Ä—ã üñ•" or message.text == "/parsers")
async def send_message(message: types.Message):
    kb = InlineKeyboardMarkup().row(
        InlineKeyboardButton(
            "–ü–ê–†–°–ï–† WildBerriesüü£", callback_data=parsing_cb.new(action="wb"))).row(
            InlineKeyboardButton("–ü–û–ó–ò–¶–ò–Ø –ê–†–¢–ò–ö–£–õ–ê WILDBERRIESüü™", callback_data=services_cb.new(action="wb_place"))).row(
        InlineKeyboardButton("–ü–ê–†–°–ï–† Ozonüîµ", callback_data=parsing_cb.new(action="ozon"))).row(
            InlineKeyboardButton("–ü–ê–†–°–ï–† Lamodaüü†", callback_data=parsing_cb.new(action="lamoda"))).row(
        InlineKeyboardButton("–ü–ê–†–°–ï–† SberMegaMarketüü¢", callback_data=parsing_cb.new(action="sber"))).row(
            InlineKeyboardButton("–ü–ê–†–°–ï–† KazanExpressüî¥", callback_data=parsing_cb.new(action="express"))).row(
        InlineKeyboardButton("–ü–ê–†–°–ï–† Aliexpress(Tmall)üü°", callback_data=parsing_cb.new(action="ali")))
    await message.answer("–í—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ç–µ–±–µ –ø–∞—Ä—Å–µ—Ä: ", reply_markup=kb)



@dp.callback_query_handler(parsing_cb.filter(action="ali"))
async def send_message(query: types.CallbackQuery, callback_data: dict):
    user_id = query.from_user.id
    SQL().set_sm_ali_1(user_id=user_id)
    await bot.edit_message_text("–û—Ç–ø—Ä–∞–≤—å –∞—Ä—Ç–∏–∫—É–ª –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å Aliexpress:", user_id, query.message.message_id)

@dp.callback_query_handler(parsing_cb.filter(action="lamoda"))
async def send_message(query: types.CallbackQuery, callback_data: dict):
    user_id = query.from_user.id
    SQL().set_sm_lamoda_1(user_id=user_id)
    await bot.edit_message_text("–û—Ç–ø—Ä–∞–≤—å –∞—Ä—Ç–∏–∫—É–ª –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å Lamoda:", user_id, query.message.message_id)

@dp.callback_query_handler(parsing_cb.filter(action="wb"))
async def send_message(query: types.CallbackQuery, callback_data: dict):
    user_id = query.from_user.id
    SQL().set_sm_wb_1(user_id=user_id)
    await bot.edit_message_text(f"–û—Ç–ø—Ä–∞–≤—å –∞—Ä—Ç–∏–∫—É–ª –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å WB:\n–í–ê–ñ–ù–û!!! –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è - {WBCON_INSTRUCTION_LINK}", user_id, query.message.message_id, parse_mode="HTML", disable_web_page_preview=True)

@dp.callback_query_handler(parsing_cb.filter(action="ozon"))
async def send_message(query: types.CallbackQuery, callback_data: dict):
    user_id = query.from_user.id
    SQL().set_sm_ozon_1(user_id=user_id)
    await bot.edit_message_text("–û—Ç–ø—Ä–∞–≤—å –∞—Ä—Ç–∏–∫—É–ª –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å Ozon:", user_id, query.message.message_id)
    
@dp.callback_query_handler(parsing_cb.filter(action="sber"))
async def send_message(query: types.CallbackQuery, callback_data: dict):
    user_id = query.from_user.id
    SQL().set_sm_sber_1(user_id=user_id)
    await bot.edit_message_text("–û—Ç–ø—Ä–∞–≤—å –∞—Ä—Ç–∏–∫—É–ª –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å –°–±–µ—Ä–ú–µ–≥–∞–ú–∞—Ä–∫–µ—Ç:", user_id, query.message.message_id)

@dp.callback_query_handler(parsing_cb.filter(action="express"))
async def send_message(query: types.CallbackQuery, callback_data: dict):
    user_id = query.from_user.id
    SQL().set_sm_kazan_1(user_id=user_id)
    await bot.edit_message_text("–û—Ç–ø—Ä–∞–≤—å –∞—Ä—Ç–∏–∫—É–ª –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å –ö–∞–∑–∞–Ω—å –≠–∫—Å–ø—Ä–µ—Å—Å:", user_id, query.message.message_id)




